<%- include('partials/header'); -%>


<div>
<a href="/new" class="btn">Pridėti naują programuotoją</a>
</div>
<h1 class="title">Programuotojai API</h1>

<div id="homepage">
	<div id="devs"></div>
</div>

<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
<script src="https://unpkg.com/react@15/dist/react.js"></script>
<script src="https://unpkg.com/react-dom@15/dist/react-dom.min.js"></script>

<!-- Create React Component -->
<script type="text/babel">
	var Devs = React.createClass({
		getInitialState: function () {
			return {
				devs: [],
				lat: null,
				lng: null,
			}
		},

		devsList: function () {
			let that = this
			return this.state.devs.map(function (dev, index) {
				return (
					<li data-id={dev._id} key={index}>
						<span className={dev.laisvas ? 'free' : 'busy'}></span>
						<span className='name'>{dev.vardas}</span>
						<span className='rank'>{dev.tech.join(', ')}</span>
						<span className='dist'>{Math.floor(dev.distance / 1000)} km</span>
						<button
							onClick={e => {
								let id = e.target.dataset.id
								that.handleDelete(id)
								that.setState({
									devs: that.state.devs.filter(developer => {
										return developer._id !== id
									}),
								})
							}}
							class='btn-delete'
							data-id={dev._id}
						>
							<svg
								pointerEvents='none'
								stroke='currentColor'
								fill='currentColor'
								stroke-width='0'
								viewBox='0 0 16 16'
								height='1em'
								width='1em'
								xmlns='http://www.w3.org/2000/svg'
							>
								<path
									data-id={dev._id}
									d='M5.5 5.5A.5.5 0 016 6v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm2.5 0a.5.5 0 01.5.5v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm3 .5a.5.5 0 00-1 0v6a.5.5 0 001 0V6z'
								></path>
								<path
									fill-rule='evenodd'
									d='M14.5 3a1 1 0 01-1 1H13v9a2 2 0 01-2 2H5a2 2 0 01-2-2V4h-.5a1 1 0 01-1-1V2a1 1 0 011-1H6a1 1 0 011-1h2a1 1 0 011 1h3.5a1 1 0 011 1v1zM4.118 4L4 4.059V13a1 1 0 001 1h6a1 1 0 001-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z'
									clip-rule='evenodd'
								></path>
							</svg>
						</button>
					</li>
				)
			})
		},

		turnAddScreen: function () {
			this.setState({ addProgrammerScreen: true })
		},

		render: function () {
			return (
				<div
					id='dev-container'
					style={{ padding: '40px 0 0 0', position: 'relative' }}
				>
					<div>
						<h2>Surask programuotoją šalia savęs!</h2>

						<form id='search' onSubmit={this.handleSubmit}>
							<label>Ilguma:</label>
							<input
								type='number'
								ref='lng'
								placeholder='ilguma'								
								required
							/>
							<label>Platuma:</label>
							<input
								type='number'
								ref='lat'
								placeholder='platuma'								
								required
							/>
							<input type='submit' value='Rasti programuotojus' />
						</form>
						<ul>{this.devsList()}</ul>
					</div>
				</div>
			)
		},

		handleSubmit: function (e) {
			e.preventDefault()
			var lng = this.refs.lng.value
			var lat = this.refs.lat.value

			this.setState({ lat: lat })
			this.setState({ lng: lng })

			fetch('/api/programuotojai/?lng=' + lng + '&lat=' + lat)
				.then(response => {
					if (!response.ok) {
						throw new Error('Network response was not ok')
					}
					return response.json()
				})
				.then(json => {
					this.setState({
						devs: json,
					})
				})
				.catch(error => {
					console.error('Error during fetch:', error)
				})
		},

		handleDelete: function (id) {
			fetch(`/api/programuotojai/${id}`, {
				method: 'DELETE',
			})
				.then(data => {
					console.log('deleted')
					document.getElementById(id).style.display = 'none'
				})
				.catch(err => console.log(err))
		},
	})
	ReactDOM.render(<Devs />, document.getElementById('devs'))
</script>

<%- include('partials/footer'); -%>
